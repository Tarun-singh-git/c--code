#include<iostream>
using namespace std;
class node{
public:
int data;
node*next; //node creation
node(int data){ 
    this->data=data;
    this->next=NULL;
} //constructor
~node(){
    int value=this->data;
    if(this->next!=NULL){
        delete next;
        this->next=NULL;
    }
}//destructor
};
void insertatbeg(node*&head,int d){
    node*temp=new node(d);
    temp->next=head;
    head=temp;
    } //insert at first position
void insertatend(node*&tail,int d){
    node*temp=new node(d);
    tail->next=temp;
    tail=temp;
} //insert at last position
void insertatpos(node*&head,node*&tail,int k, int d){
    if(k==1){
        insertatbeg(head,d); //call for first position
        return;
    }
    node*temp=head;
    int c=1;
    while(c<k-1){
        temp=temp->next;
        c++;
    } //iterate till the index
    if(temp->next==NULL){
        insertatend(tail,d); //call for last position
        return;
    }
    node*ip=new node(d); 
    ip->next=temp->next;
    temp->next=ip;
} //insert at any position
void del(node*&head,int k){
if(k==1){
    node*temp=head;
    head=head->next;
    temp->next=NULL;
    delete temp;
    return;
} //deletion at first position
node*curr=head;
node*prev=NULL;
int c=1;
while(c<k){
    prev=curr;
    curr=curr->next;
    c++;
}
prev->next=curr->next;
curr->next=NULL;
delete curr;
}// deletion at any position
void print(node*&head){
    node*temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;

    }cout<<endl;
}// print the list
int main(){
    node*node1=new node(10);
    node*head=node1;
      node*tail=node1;
      insertatpos(head,tail,1,5);
      insertatpos(head,tail,3,15);
      insertatpos(head,tail,2,12);
    insertatpos(head,tail,4,20);
insertatpos(head,tail,3,18);
insertatpos(head,tail,2,19);
      print(head);
      del(head,2);
      print(head);
      del(head,6);
      print(head);
       del(head,1);
       print(head);
      
      return 0;
}
